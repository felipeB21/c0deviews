generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  email       String    @unique
  username    String    @unique
  password    String?
  avatar      String?
  googleId    String?  @unique
  accessToken String?
  refreshToken String?
  isGoogleAccount      Boolean  @default(false)
  isProfileInitialized Boolean  @default(false)
  posts       Post[]
  comments    Comment[]
  postVisits  PostVisit[]   
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Post {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  slug      String     @unique
  title     String     @unique
  body      String
  author    User       @relation(fields: [authorId], references: [id])
  authorId  String     @db.ObjectId
  visits    Int        @default(0)
  comments  Comment[]
  postVisits PostVisit[]  // Removed `@relation(onDelete: Cascade)`
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt  
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  comment   String
  post      Post     @relation(fields: [postId], references: [id])
  postId    String   @db.ObjectId
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String   @db.ObjectId
  createdAt   DateTime  @default(now())
}

model PostVisit {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  userId  String @db.ObjectId
  postId  String @db.ObjectId
  post    Post   @relation(fields: [postId], references: [id], onDelete: Cascade) // Specify `onDelete` here
  user    User   @relation(fields: [userId], references: [id])

  @@unique([userId, postId])
}
